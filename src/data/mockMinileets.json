[
    {
        "title": "Invert Binary Tree",
        "type": "drag-and-swap",
        "difficulty": "easy",
        "tags": ["binary tree", "recursion"],
        "description": "226. Invert Binary Tree (easy)\nGiven the root of a binary tree, invert the tree, and return its root.\n\nExample 1:\nInput: root = [4,2,7,1,3,6,9]\nOutput: [4,7,2,9,6,3,1]\n\nExample 2:\nInput: root = [2,1,3]\nOutput: [2,3,1]\n\nExample 3:\nInput: root = []\nOutput: []\n\nConstraints:\nThe number of nodes in the tree is in the range [0, 100].\n-100 <= Node.val <= 100",
        "code": "def invertTree(node):\n    if node is None:\n    return node\n\n    temp = node.left\n    node.right = temp\n    node.left = node.right\n\n    invertTree(node.left)\n    invertTree(node.right)\n\n        return None",
        "solution": [1,2,12,4,5,7,6,8,9,10,11,3],
        "hint": ["Take a closer look at the return statements!", "Is the swapping order correct?"]
    }
]